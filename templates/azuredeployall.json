{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.9.1.41621",
      "templateHash": "10193177767796014443"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "region for resource deployment"
      }
    },
    "fileUploadsStorageAccount": {
      "type": "string",
      "defaultValue": "fileuploads",
      "metadata": {
        "description": "Provide a unique name for the storage account where you will load files. Use only lower case letters and numbers, at least 3 and less than 17 chars"
      },
      "maxLength": 16,
      "minLength": 3
    },
    "storageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "metadata": {
        "description": "Storage account sku"
      }
    },
    "allowBlobPublicAccess": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Allow blob public access"
      }
    },
    "allowSharedKeyAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Allow shared key access"
      }
    },
    "storageTier": {
      "type": "string",
      "defaultValue": "Hot",
      "allowedValues": [
        "Hot",
        "Cool"
      ],
      "metadata": {
        "description": "Storage account access tier, Hot for frequently accessed data or Cool for infreqently accessed data"
      }
    },
    "blobEncryptionEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable blob encryption at rest"
      }
    },
    "enableBlobRetention": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Blob Retention"
      }
    },
    "blobRetentionDays": {
      "type": "int",
      "defaultValue": 7,
      "metadata": {
        "description": "Number of days to retain blobs"
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "uploads",
      "metadata": {
        "description": "The name of the container in which to store uploads"
      }
    },
    "fnStorageName": {
      "type": "string",
      "defaultValue": "dataprocfuncstor",
      "metadata": {
        "description": "Provide a name for the storage account to back the function app. Use only lower case letters and numbers, at least 3 and less than 17 chars"
      },
      "maxLength": 16,
      "minLength": 3
    },
    "fnStorageSKU": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for Application Insights"
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet",
      "allowedValues": [
        "node",
        "dotnet",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    },
    "fnAppName": {
      "type": "string",
      "defaultValue": "[format('DataProcessingFunctions{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "accountName": {
      "type": "string",
      "defaultValue": "[format('moviesDB-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Cosmos DB account name"
      }
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "moviesdb",
      "metadata": {
        "description": "The name for the SQL API database"
      }
    },
    "watchedMovies": {
      "type": "string",
      "defaultValue": "watchedmovies",
      "metadata": {
        "description": "Container for watched movies"
      }
    },
    "moviesToWatchContainer": {
      "type": "string",
      "defaultValue": "moviestowatch",
      "metadata": {
        "description": "Container for movies to watch"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "storageDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageName": {
            "value": "[parameters('fileUploadsStorageAccount')]"
          },
          "storageSku": {
            "value": "[parameters('storageSku')]"
          },
          "storageTier": {
            "value": "[parameters('storageTier')]"
          },
          "blobEncryptionEnabled": {
            "value": "[parameters('blobEncryptionEnabled')]"
          },
          "enableBlobRetention": {
            "value": "[parameters('enableBlobRetention')]"
          },
          "blobRetentionDays": {
            "value": "[parameters('blobRetentionDays')]"
          },
          "containerName": {
            "value": "[parameters('containerName')]"
          },
          "allowBlobPublicAccess": {
            "value": "[parameters('allowBlobPublicAccess')]"
          },
          "allowSharedKeyAccess": {
            "value": "[parameters('allowSharedKeyAccess')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.9.1.41621",
              "templateHash": "4267925180489767020"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Storage account location"
              }
            },
            "storageName": {
              "type": "string",
              "defaultValue": "fileuploads",
              "metadata": {
                "description": "Provide a unique name for the storage account where you will load files. Use only lower case letters and numbers, at least 3 and less than 17 chars"
              },
              "maxLength": 16,
              "minLength": 3
            },
            "storageSku": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
              ],
              "metadata": {
                "description": "Storage account sku"
              }
            },
            "allowBlobPublicAccess": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Allow blob public access"
              }
            },
            "allowSharedKeyAccess": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Allow shared key access"
              }
            },
            "storageTier": {
              "type": "string",
              "defaultValue": "Hot",
              "allowedValues": [
                "Hot",
                "Cool"
              ],
              "metadata": {
                "description": "Storage account access tier, Hot for frequently accessed data or Cool for infreqently accessed data"
              }
            },
            "blobEncryptionEnabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable blob encryption at rest"
              }
            },
            "enableBlobRetention": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable Blob Retention"
              }
            },
            "blobRetentionDays": {
              "type": "int",
              "defaultValue": 7,
              "metadata": {
                "description": "Number of days to retain blobs"
              }
            },
            "containerName": {
              "type": "string",
              "defaultValue": "uploads",
              "metadata": {
                "description": "The name of the container in which to store uploads"
              }
            }
          },
          "variables": {
            "storageAccountName": "[substring(format('{0}{1}', parameters('storageName'), uniqueString(resourceGroup().id)), 0, 24)]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-02-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "[parameters('storageSku')]"
              },
              "properties": {
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "accessTier": "[parameters('storageTier')]",
                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "services": {
                    "blob": {
                      "enabled": "[parameters('blobEncryptionEnabled')]"
                    }
                  }
                }
              },
              "metadata": {
                "description": "The storage account.  Toggle the public access to true if you want public blobs on the account in any containers"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": {
                  "enabled": "[parameters('enableBlobRetention')]",
                  "days": "[parameters('blobRetentionDays')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', parameters('containerName'))]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "metadata": {},
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "functionAppDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "fnAppName": {
            "value": "[parameters('fnAppName')]"
          },
          "appInsightsLocation": {
            "value": "[parameters('appInsightsLocation')]"
          },
          "fnStorageName": {
            "value": "[parameters('fnStorageName')]"
          },
          "fnStorageSKU": {
            "value": "[parameters('fnStorageSKU')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "runtime": {
            "value": "[parameters('runtime')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.9.1.41621",
              "templateHash": "18101257229162117234"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "fnStorageName": {
              "type": "string",
              "defaultValue": "dataprocfuncstor",
              "metadata": {
                "description": "Provide a name for the storage account to back the function app. Use only lower case letters and numbers, at least 3 and less than 17 chars"
              },
              "maxLength": 16,
              "minLength": 3
            },
            "fnStorageSKU": {
              "type": "string",
              "defaultValue": "Standard_LRS"
            },
            "appInsightsLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for Application Insights"
              }
            },
            "runtime": {
              "type": "string",
              "defaultValue": "dotnet",
              "allowedValues": [
                "node",
                "dotnet",
                "java"
              ],
              "metadata": {
                "description": "The language worker runtime to load in the function app."
              }
            },
            "fnAppName": {
              "type": "string",
              "defaultValue": "[format('DataProcessingFunctions{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "The name of the function app that you wish to create."
              }
            }
          },
          "variables": {
            "fnStorageAccountName": "[substring(format('{0}{1}', parameters('fnStorageName'), uniqueString(resourceGroup().id)), 0, 24)]",
            "hostingPlanName": "[parameters('fnAppName')]",
            "applicationInsightsName": "[parameters('fnAppName')]",
            "functionWorkerRuntime": "[parameters('runtime')]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-08-01",
              "name": "[variables('fnStorageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('fnStorageSKU')]"
              },
              "kind": "Storage"
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-03-01",
              "name": "[variables('hostingPlanName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic"
              },
              "properties": {}
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[parameters('fnAppName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('fnStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('fnStorageAccountName')), '2021-08-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('fnStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('fnStorageAccountName')), '2021-08-01').keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(parameters('fnAppName'))]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "[variables('functionWorkerRuntime')]"
                    }
                  ],
                  "ftpsState": "FtpsOnly",
                  "minTlsVersion": "1.2"
                },
                "httpsOnly": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('fnStorageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('applicationInsightsName')]",
              "location": "[parameters('appInsightsLocation')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Request_Source": "rest"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "deployCosmosDBFreeTier",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "accountName": {
            "value": "[parameters('accountName')]"
          },
          "databaseName": {
            "value": "[parameters('databaseName')]"
          },
          "moviesToWatchContainer": {
            "value": "[parameters('moviesToWatchContainer')]"
          },
          "watchedMovies": {
            "value": "[parameters('watchedMovies')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.9.1.41621",
              "templateHash": "3580498454136881147"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "accountName": {
              "type": "string",
              "defaultValue": "[format('moviesDB-{0}', uniqueString(resourceGroup().id))]",
              "metadata": {
                "description": "Cosmos DB account name"
              }
            },
            "databaseName": {
              "type": "string",
              "defaultValue": "moviesdb",
              "metadata": {
                "description": "The name for the SQL API database"
              }
            },
            "watchedMovies": {
              "type": "string",
              "defaultValue": "watchedmovies",
              "metadata": {
                "description": "Container for watched movies"
              }
            },
            "moviesToWatchContainer": {
              "type": "string",
              "defaultValue": "moviestowatch",
              "metadata": {
                "description": "Container for movies to watch"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2022-05-15",
              "name": "[toLower(parameters('accountName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "enableFreeTier": true,
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('location')]"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}', toLower(parameters('accountName')), parameters('databaseName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('databaseName')]"
                },
                "options": {
                  "throughput": 1000
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(parameters('accountName')))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}/{2}', toLower(parameters('accountName')), parameters('databaseName'), parameters('watchedMovies'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('watchedMovies')]",
                  "partitionKey": {
                    "paths": [
                      "/title"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/_etag/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(parameters('accountName')), parameters('databaseName'))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2022-05-15",
              "name": "[format('{0}/{1}/{2}', toLower(parameters('accountName')), parameters('databaseName'), parameters('moviesToWatchContainer'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('moviesToWatchContainer')]",
                  "partitionKey": {
                    "paths": [
                      "/title"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/_etag/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(parameters('accountName')), parameters('databaseName'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}